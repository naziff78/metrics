/*
 * Created on 29 avr. 2016 ( Time 13:45:39 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.business.service.mapping;

import static org.junit.Assert.assertEquals;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import org.demo.bean.MetricsRegistry;
import org.demo.bean.jpa.MetricsRegistryEntity;
import org.demo.bean.jpa.ProjetEntity;
import org.demo.test.MockValues;

/**
 * Test : Mapping between entity beans and display beans.
 */
public class MetricsRegistryServiceMapperTest {

	private MetricsRegistryServiceMapper metricsRegistryServiceMapper;

	private static ModelMapper modelMapper = new ModelMapper();

	private MockValues mockValues = new MockValues();
	
	
	@BeforeClass
	public static void setUp() {
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}
	
	@Before
	public void before() {
		metricsRegistryServiceMapper = new MetricsRegistryServiceMapper();
		metricsRegistryServiceMapper.setModelMapper(modelMapper);
	}
	
	/**
	 * Mapping from 'MetricsRegistryEntity' to 'MetricsRegistry'
	 * @param metricsRegistryEntity
	 */
	@Test
	public void testMapMetricsRegistryEntityToMetricsRegistry() {
		// Given
		MetricsRegistryEntity metricsRegistryEntity = new MetricsRegistryEntity();
		metricsRegistryEntity.setNom(mockValues.nextInteger());
		metricsRegistryEntity.setDateCreation(mockValues.nextDate());
		metricsRegistryEntity.setDateModification(mockValues.nextDate());
		metricsRegistryEntity.setProjet(new ProjetEntity());
		metricsRegistryEntity.getProjet().setId(mockValues.nextInteger());
		
		// When
		MetricsRegistry metricsRegistry = metricsRegistryServiceMapper.mapMetricsRegistryEntityToMetricsRegistry(metricsRegistryEntity);
		
		// Then
		assertEquals(metricsRegistryEntity.getNom(), metricsRegistry.getNom());
		assertEquals(metricsRegistryEntity.getDateCreation(), metricsRegistry.getDateCreation());
		assertEquals(metricsRegistryEntity.getDateModification(), metricsRegistry.getDateModification());
		assertEquals(metricsRegistryEntity.getProjet().getId(), metricsRegistry.getIdProjet());
	}
	
	/**
	 * Test : Mapping from 'MetricsRegistry' to 'MetricsRegistryEntity'
	 */
	@Test
	public void testMapMetricsRegistryToMetricsRegistryEntity() {
		// Given
		MetricsRegistry metricsRegistry = new MetricsRegistry();
		metricsRegistry.setNom(mockValues.nextInteger());
		metricsRegistry.setDateCreation(mockValues.nextDate());
		metricsRegistry.setDateModification(mockValues.nextDate());
		metricsRegistry.setIdProjet(mockValues.nextInteger());

		MetricsRegistryEntity metricsRegistryEntity = new MetricsRegistryEntity();
		
		// When
		metricsRegistryServiceMapper.mapMetricsRegistryToMetricsRegistryEntity(metricsRegistry, metricsRegistryEntity);
		
		// Then
		assertEquals(metricsRegistry.getNom(), metricsRegistryEntity.getNom());
		assertEquals(metricsRegistry.getDateCreation(), metricsRegistryEntity.getDateCreation());
		assertEquals(metricsRegistry.getDateModification(), metricsRegistryEntity.getDateModification());
		assertEquals(metricsRegistry.getIdProjet(), metricsRegistryEntity.getProjet().getId());
	}

}