/*
 * Created on 29 avr. 2016 ( Time 13:45:39 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.demo.bean.MetricsRegistry;
import org.demo.bean.jpa.MetricsRegistryEntity;
import java.util.Date;
import java.util.List;
import org.demo.business.service.MetricsRegistryService;
import org.demo.business.service.mapping.MetricsRegistryServiceMapper;
import org.demo.data.repository.jpa.MetricsRegistryJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of MetricsRegistryService
 */
@Component
@Transactional
public class MetricsRegistryServiceImpl implements MetricsRegistryService {

	@Resource
	private MetricsRegistryJpaRepository metricsRegistryJpaRepository;

	@Resource
	private MetricsRegistryServiceMapper metricsRegistryServiceMapper;
	
	@Override
	public MetricsRegistry findById(Integer id) {
		MetricsRegistryEntity metricsRegistryEntity = metricsRegistryJpaRepository.findOne(id);
		return metricsRegistryServiceMapper.mapMetricsRegistryEntityToMetricsRegistry(metricsRegistryEntity);
	}

	@Override
	public List<MetricsRegistry> findAll() {
		Iterable<MetricsRegistryEntity> entities = metricsRegistryJpaRepository.findAll();
		List<MetricsRegistry> beans = new ArrayList<MetricsRegistry>();
		for(MetricsRegistryEntity metricsRegistryEntity : entities) {
			beans.add(metricsRegistryServiceMapper.mapMetricsRegistryEntityToMetricsRegistry(metricsRegistryEntity));
		}
		return beans;
	}

	@Override
	public MetricsRegistry save(MetricsRegistry metricsRegistry) {
		return update(metricsRegistry) ;
	}

	@Override
	public MetricsRegistry create(MetricsRegistry metricsRegistry) {
		MetricsRegistryEntity metricsRegistryEntity = metricsRegistryJpaRepository.findOne(metricsRegistry.getId());
		if( metricsRegistryEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		metricsRegistryEntity = new MetricsRegistryEntity();
		metricsRegistryServiceMapper.mapMetricsRegistryToMetricsRegistryEntity(metricsRegistry, metricsRegistryEntity);
		MetricsRegistryEntity metricsRegistryEntitySaved = metricsRegistryJpaRepository.save(metricsRegistryEntity);
		return metricsRegistryServiceMapper.mapMetricsRegistryEntityToMetricsRegistry(metricsRegistryEntitySaved);
	}

	@Override
	public MetricsRegistry update(MetricsRegistry metricsRegistry) {
		MetricsRegistryEntity metricsRegistryEntity = metricsRegistryJpaRepository.findOne(metricsRegistry.getId());
		metricsRegistryServiceMapper.mapMetricsRegistryToMetricsRegistryEntity(metricsRegistry, metricsRegistryEntity);
		MetricsRegistryEntity metricsRegistryEntitySaved = metricsRegistryJpaRepository.save(metricsRegistryEntity);
		return metricsRegistryServiceMapper.mapMetricsRegistryEntityToMetricsRegistry(metricsRegistryEntitySaved);
	}

	@Override
	public void delete(Integer id) {
		metricsRegistryJpaRepository.delete(id);
	}

	public MetricsRegistryJpaRepository getMetricsRegistryJpaRepository() {
		return metricsRegistryJpaRepository;
	}

	public void setMetricsRegistryJpaRepository(MetricsRegistryJpaRepository metricsRegistryJpaRepository) {
		this.metricsRegistryJpaRepository = metricsRegistryJpaRepository;
	}

	public MetricsRegistryServiceMapper getMetricsRegistryServiceMapper() {
		return metricsRegistryServiceMapper;
	}

	public void setMetricsRegistryServiceMapper(MetricsRegistryServiceMapper metricsRegistryServiceMapper) {
		this.metricsRegistryServiceMapper = metricsRegistryServiceMapper;
	}

}
