/*
 * Created on 29 avr. 2016 ( Time 13:45:39 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import org.demo.bean.Timers;
import org.demo.bean.jpa.TimersEntity;
import org.demo.bean.jpa.MetricsRegistryEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class TimersServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public TimersServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'TimersEntity' to 'Timers'
	 * @param timersEntity
	 */
	public Timers mapTimersEntityToTimers(TimersEntity timersEntity) {
		if(timersEntity == null) {
			return null;
		}

		//--- Generic mapping 
		Timers timers = map(timersEntity, Timers.class);

		//--- Link mapping ( link to MetricsRegistry )
		if(timersEntity.getMetricsRegistry() != null) {
			timers.setIdMetricsRegistry(timersEntity.getMetricsRegistry().getId());
		}
		return timers;
	}
	
	/**
	 * Mapping from 'Timers' to 'TimersEntity'
	 * @param timers
	 * @param timersEntity
	 */
	public void mapTimersToTimersEntity(Timers timers, TimersEntity timersEntity) {
		if(timers == null) {
			return;
		}

		//--- Generic mapping 
		map(timers, timersEntity);

		//--- Link mapping ( link : timers )
		if( hasLinkToMetricsRegistry(timers) ) {
			MetricsRegistryEntity metricsRegistry1 = new MetricsRegistryEntity();
			metricsRegistry1.setId( timers.getIdMetricsRegistry() );
			timersEntity.setMetricsRegistry( metricsRegistry1 );
		} else {
			timersEntity.setMetricsRegistry( null );
		}

	}
	
	/**
	 * Verify that MetricsRegistry id is valid.
	 * @param MetricsRegistry MetricsRegistry
	 * @return boolean
	 */
	private boolean hasLinkToMetricsRegistry(Timers timers) {
		if(timers.getIdMetricsRegistry() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}