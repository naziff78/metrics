/*
 * Created on 29 avr. 2016 ( Time 14:11:56 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.demo.bean.MetricsRegistry;
import org.demo.business.service.MetricsRegistryService;
import org.demo.web.listitem.MetricsRegistryListItem;

/**
 * Spring MVC controller for 'MetricsRegistry' management.
 */
@Controller
public class MetricsRegistryRestController {

	@Resource
	private MetricsRegistryService metricsRegistryService;
	
	@RequestMapping( value="/items/metricsRegistry",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<MetricsRegistryListItem> findAllAsListItems() {
		List<MetricsRegistry> list = metricsRegistryService.findAll();
		List<MetricsRegistryListItem> items = new LinkedList<MetricsRegistryListItem>();
		for ( MetricsRegistry metricsRegistry : list ) {
			items.add(new MetricsRegistryListItem( metricsRegistry ) );
		}
		return items;
	}
	
	@RequestMapping( value="/metricsRegistry",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<MetricsRegistry> findAll() {
		return metricsRegistryService.findAll();
	}

	@RequestMapping( value="/metricsRegistry/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public MetricsRegistry findOne(@PathVariable("id") Integer id) {
		return metricsRegistryService.findById(id);
	}
	
	@RequestMapping( value="/metricsRegistry",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public MetricsRegistry create(@RequestBody MetricsRegistry metricsRegistry) {
		return metricsRegistryService.create(metricsRegistry);
	}

	@RequestMapping( value="/metricsRegistry/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public MetricsRegistry update(@PathVariable("id") Integer id, @RequestBody MetricsRegistry metricsRegistry) {
		return metricsRegistryService.update(metricsRegistry);
	}

	@RequestMapping( value="/metricsRegistry/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Integer id) {
		metricsRegistryService.delete(id);
	}
	
}
