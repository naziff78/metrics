/*
 * Created on 29 avr. 2016 ( Time 14:11:56 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.demo.bean.Timers;
import org.demo.business.service.TimersService;
import org.demo.web.listitem.TimersListItem;

/**
 * Spring MVC controller for 'Timers' management.
 */
@Controller
public class TimersRestController {

	@Resource
	private TimersService timersService;
	
	@RequestMapping( value="/items/timers",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<TimersListItem> findAllAsListItems() {
		List<Timers> list = timersService.findAll();
		List<TimersListItem> items = new LinkedList<TimersListItem>();
		for ( Timers timers : list ) {
			items.add(new TimersListItem( timers ) );
		}
		return items;
	}
	
	@RequestMapping( value="/timers",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Timers> findAll() {
		return timersService.findAll();
	}

	@RequestMapping( value="/timers/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Timers findOne(@PathVariable("id") Integer id) {
		return timersService.findById(id);
	}
	
	@RequestMapping( value="/timers",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Timers create(@RequestBody Timers timers) {
		return timersService.create(timers);
	}

	@RequestMapping( value="/timers/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Timers update(@PathVariable("id") Integer id, @RequestBody Timers timers) {
		return timersService.update(timers);
	}

	@RequestMapping( value="/timers/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Integer id) {
		timersService.delete(id);
	}
	
}
