/*
 * Created on 29 avr. 2016 ( Time 14:11:56 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.demo.bean.Projet;
import org.demo.business.service.ProjetService;
import org.demo.web.listitem.ProjetListItem;

/**
 * Spring MVC controller for 'Projet' management.
 */
@Controller
public class ProjetRestController {

	@Resource
	private ProjetService projetService;
	
	@RequestMapping( value="/items/projet",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<ProjetListItem> findAllAsListItems() {
		List<Projet> list = projetService.findAll();
		List<ProjetListItem> items = new LinkedList<ProjetListItem>();
		for ( Projet projet : list ) {
			items.add(new ProjetListItem( projet ) );
		}
		return items;
	}
	
	@RequestMapping( value="/projet",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Projet> findAll() {
		return projetService.findAll();
	}

	@RequestMapping( value="/projet/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Projet findOne(@PathVariable("id") Integer id) {
		return projetService.findById(id);
	}
	
	@RequestMapping( value="/projet",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Projet create(@RequestBody Projet projet) {
		return projetService.create(projet);
	}

	@RequestMapping( value="/projet/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Projet update(@PathVariable("id") Integer id, @RequestBody Projet projet) {
		return projetService.update(projet);
	}

	@RequestMapping( value="/projet/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Integer id) {
		projetService.delete(id);
	}
	
}
